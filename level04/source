# include <stdio.h>
# include <stdlib.h>
# include <string.h>
# include <sys/types.h>
# include <sys/wait.h>
# include <unistd.h>
# include <sys/prctl.h>
# include <sys/ptrace.h>


int main(void) {

	int		*wstatus = NULL; // esp+0x1c
	char	str[32]; // esp+0x20
	int		tmp;	// esp+0xa8
	pid_t	pid; // esp+0xac

	for ( int i = 0; i < 32; i++ )
		str[i] = '\0';

	pid = fork();

	if ( pid ) {
		prctl( 1, 1 );
		ptrace( PTRACE_TRACEME, 0, NULL, NULL );
		puts( "Give me some shellcode, k" );
		gets( str );
	} else {

		while (1) {
			wait( wstatus );
			if ( *wstatus & 127 == 0 ) {
				if ( (*wstatus & 127) >> 1 == 0 ) {
					if ( ptrace(PTRACE_PEEKDATA, pid, 0x2c, NULL) == 0xb ) {
						puts("no exec() for you");
						kill(pid, 9);
						break;
					}
				}
			} else {
				puts( "child is exiting..." );
				break;
			}
		}

	}

	return 0;

}

// =============== To follow child process using gdb ==========
// set follow-fork-mode parent
// set follow-fork-mode child
// show follow-fork-mode
