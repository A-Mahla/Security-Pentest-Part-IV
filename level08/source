# include <stdio.h>
# include <stdlib.h>
# include <string.h>
# include <sys/ptrace.h>
# include <fcntl.h>
# include <unistd.h>


void	log_wrapper(FILE *file/*rbp-0x118*/, char *str/*rbp-0x120*/, char *av/*rbp-0x128*/)
{
	char	buffer[256]; // rbp-0x110

	strcpy(buffer, str);
	snprintf(buffer + strlen(buffer), 254 - strlen(buffer), av);
	buffer[strcspn(buffer, "\n")] = '\0';
	fprintf(file, "LOG: %s\n", buffer);
}


int		main(int ac, char **av, char **env)
{
	FILE	*file1; // rbp-0x88
	FILE	*file2; // rbp-0x80
	int		fd; // rbp-0x78
	char	buffer[96]; // rbp-0x70
	char	read;

	if (ac != 2)
		printf("Usage: %s filename\n", av[0]);
	if ((file1 = fopen("./backups/.log", "w")) == 0) {
		printf("ERROR: Failed to open %s\n", "./backups/.log");
		exit(1);
	}
	log_wrapper(file1, "Starting back up: ", av[1]);
	if ((file2 = fopen(av[1], "w")) == 0) {
		printf("ERROR: Failed to open %s\n", av[1]);
		exit(1);
	}
	strcpy(buffer, "./backups/");
	strncat(buffer, av[1], 63 - strlen("./backups/"));
	if ((fd = open(buffer, O_RDWR | O_CREAT, 0644)) < 0) {
		printf("ERROR: Failed to open %s%s\n", "./backups/", av[1]);
		exit(1);
	}
	while ((read = fgetc(file2)) != -1)
		write(fd, &read, 1);
	log_wrapper(file1, "Finished back up ", av[1]);
	fclose(file1);
	close(fd);
	return 0;
}
